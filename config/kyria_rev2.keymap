// ################################################################
// ! This keymap is made to work with the SWEDISH keyboard layout !
// ################################################################

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    //    combos {
    //        compatible = "zmk,combos";
    //
    //        layer_2 {
    //            bindings = <&mo 2>;
    //            key-positions = <42 47>;
    //            layers = <0 1 2>;
    //        };
    //    };

    macros {
        LSQBRKT: left_square_bracket {
            compatible = "zmk,behavior-macro";
            label = "left_square_bracket";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press    &kp RIGHT_ALT>,
                <&macro_tap      &kp N8>,
                <&macro_release  &kp RALT>;
        };

        RSQBRKT: right_square_bracket {
            compatible = "zmk,behavior-macro";
            label = "right_square_bracket";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press    &kp RIGHT_ALT>,
                <&macro_tap      &kp N9>,
                <&macro_release  &kp RALT>;
        };

        LBRCE: left_brace {
            compatible = "zmk,behavior-macro";
            label = "left_brace";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press    &kp RIGHT_ALT>,
                <&macro_tap      &kp N7>,
                <&macro_release  &kp RALT>;
        };

        RBRCE: right_brace {
            compatible = "zmk,behavior-macro";
            label = "right_brace";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press    &kp RIGHT_ALT>,
                <&macro_tap      &kp N0>,
                <&macro_release  &kp RALT>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |   E   |  R   |  T  |                                     |  Y  |  U   |  I    |  O  |  P  |   Å   |
            // |  TAB  |  A  |  S  |   D   |  F   |  G  |                                     |  H  |  J   |  K    |  L  |  Ö  |   Ä   |
            // | SHIFT |  Z  |  X  |   C   |  V   |  B  | LCTRL |  LALT  |   |  RALT  | RCTRL |  N  |  M   |  ,    |  .  |  -  | SHIFT |
            //                     | LCTRL | LWIN | L 1 | SPACE | LSHIFT |   | RETURN | BKSPC | L 1 | RWIN | RCTRL |

            bindings = <
&kp ESC     &kp Q   &kp W   &kp E       &kp R      &kp T                                                         &kp Y   &kp U      &kp I       &kp O     &kp P       &kp LEFT_BRACKET
&kp TAB     &kp A   &kp S   &kp D       &kp F      &kp G                                                         &kp H   &kp J      &kp K       &kp L     &kp SQT     &kp SEMICOLON
&kp LSHFT   &kp Z   &kp X   &kp C       &kp V      &kp B   &kp LCTRL   &kp LALT       &kp RALT   &kp RCTRL       &kp N   &kp M      &kp COMMA   &kp DOT   &kp SLASH   &kp RSHIFT
                            &kp LCTRL   &kp LWIN   &mo 1   &kp SPACE   &kp LSHIFT     &kp RET    &kp BACKSPACE   &mo 1   &kp RWIN   &kp RCTRL
            >;
        };

        Layer_1 {
            bindings = <
&trans   &kp N1              &kp N2             &kp N3                  &kp N4   &kp N5                                                                         &kp N6          &kp N7           &kp N8           &kp N9            &kp N0      &trans
&trans   &kp DOUBLE_QUOTES   &kp LESS_THAN      &kp LEFT_PARENTHESIS    &LBRCE   &LSQBRKT                                                                       &kp MINUS       &kp LEFT_ARROW   &kp UP_ARROW     &kp RIGHT_ARROW   &kp PG_UP   &trans
&trans   &kp BACKSLASH       &kp GREATER_THAN   &kp RIGHT_PARENTHESIS   &RBRCE   &RSQBRKT   &kp K_VOLUME_DOWN   &kp K_VOLUME_UP             &trans    &trans    &kp KP_DIVIDE   &kp HOME         &kp DOWN_ARROW   &kp END           &kp PG_DN   &trans
                                                &trans                  &trans   &trans     &trans              &lt K_PLAY_PAUSE K_MUTE     &trans    &kp DEL   &trans          &trans           &trans
            >;
        };

        //        Layer_2 {
        //            bindings = <
        // &trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans             &trans           &trans  &trans
        // &trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans    &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &trans
        // &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &ext_power EP_TOG     &out OUT_TOG  &trans
        //                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        //            >;
        //        };
    };
};
