// ################################################################
// ! This keymap is made to work with the SWEDISH keyboard layout !
// ################################################################

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    combos {
        compatible = "zmk,combos";

        combo_layer_2 {
            timeout-ms = <100>;
            bindings = <&mo RAISE>;
            key-positions = <42 47>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            // -------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |   E   |  R   |  T  |                                    |  Y  |  U   |   I   |  O  |  P  |   Å   |
            // |  TAB  |  A  |  S  |   D   |  F   |  G  |                                    |  H  |  J   |   K   |  L  |  Ö  |   Ä   |
            // | SHIFT |  Z  |  X  |   C   |  V   |  B  | LCTRL |  LALT  |  |  RALT  | RCTRL |  N  |  M   |  ,;   |  .: |  -  | SHIFT |
            //                     | LCTRL | LWIN | L 1 | SPACE | LSHIFT |  | RETURN | BKSPC | L 1 | RWIN | RCTRL |

            bindings = <
&kp ESC     &kp Q        &kp W        &kp E         &kp R          &kp T                                                         &kp Y   &kp U          &kp I         &kp O        &kp P                &kp LEFT_BRACKET
&kp TAB     &hm LGUI A   &hm LALT S   &hm LCTRL D   &hm LSHIFT F   &kp G                                                         &kp H   &hm RSHIFT J   &hm RCTRL K   &hm LALT L   &hm RGUI SEMICOLON   &kp SQT
&kp LSHFT   &kp Z        &kp X        &kp C         &kp V          &kp B   &kp LCTRL   &kp LALT       &kp RALT   &kp RCTRL       &kp N   &kp M          &kp COMMA     &kp DOT      &kp SLASH            &kp C_PLAY_PAUSE
                                      &kp LCTRL     &kp LWIN       &mo 1   &kp SPACE   &kp LSHIFT     &kp RET    &kp BACKSPACE   &mo 1   &kp RWIN       &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Layer_1 {
            // --------------------------------------------------------------------------------------------------------------------
            // |     |  1  |  2  |  3  |  4  |  5  |                                     |  6  |  7   |  8    |  9   |  0   |     |
            // |     |  "  |  <  |  (  |  {  |  [  |                                     |  ?  | LARR | UARR  | RARR | PGUP |     |
            // |     |  '  |  >  |  )  |  }  |  ]  | VOL D |  VOL U       |  |     |     |  /  | HOME | DARR  | END  | PGDN |     |
            //                   |     |     |     | SPACE | PLPA -> MUTE |  |     | DEL |     |      |       |

            bindings = <
 &trans             &kp N1            &kp N2                &kp N3  &kp N4      &kp N5                                                                      &kp N6         &kp N7          &kp N8          &kp N9           &kp N0     &trans
 &trans  &kp DOUBLE_QUOTES     &kp LESS_THAN          &kp ASTERISK  &kp RA(N7)  &kp RA(N8)                                                                  &kp MINUS      &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &kp PG_UP  &trans
 &trans      &kp BACKSLASH  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RA(N0)  &kp RA(N9)  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP             &trans  &trans   &kp KP_DIVIDE  &kp HOME        &kp DOWN_ARROW  &kp END          &kp PG_DN  &trans
                                                            &trans  &trans      &trans      &trans             &mt K_MUTE C_PLAY_PAUSE     &trans  &kp DEL  &trans         &trans          &trans
            >;
        };

        Layer_2 {
            // ----------------------------------------------------------------------------------------------------
            // |     | F1  | F2  | F3  | F4  | F5  |                          | F6  | F7  | F8  | F9  | F10 | F11 |
            // |     |     |     |     |     |     |                          |     |     |     |     |     | F12 |
            // |     |     |     |     |     |     |     |     |  |     |     |     |     |     |     |     |     |
            //                   |     |     |     |     |     |  |     |     |     |     |     |

            bindings = <
       &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
 &out OUT_TOG        &trans        &trans        &trans        &trans        &trans                                  &trans  &trans  &trans  &trans   &trans  &kp F12
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
                                                 &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
